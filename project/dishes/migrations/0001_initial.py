# Generated by Django 3.2.16 on 2023-04-16 05:51

import core.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name='Dish',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'name',
                    models.CharField(
                        help_text='Укажите название блюда. Максимум 100 символов',
                        max_length=100,
                        verbose_name='название',
                    ),
                ),
                (
                    'image_main',
                    models.ImageField(
                        help_text='Добавьте красивую фотографию блюда',
                        upload_to='dish/main/%Y/%m/%d',
                        verbose_name='главное фото',
                    ),
                ),
                (
                    'recipe',
                    tinymce.models.HTMLField(
                        help_text='Рецепт по приготовлению',
                        validators=[
                            django.core.validators.MinLengthValidator(
                                300,
                                'Рецепт слишком маленький. Пожалуйста, распишите этапы приготовления более подробно.',
                            )
                        ],
                        verbose_name='рецепт',
                    ),
                ),
                (
                    'complexity',
                    core.models.IntegerRangeField(
                        default=5,
                        help_text='Сложность блюда от 1 до 5',
                        verbose_name='сложность блюда',
                    ),
                ),
                (
                    'cooking_time',
                    models.DurationField(
                        help_text='Время готовки', verbose_name='время готовки'
                    ),
                ),
                (
                    'moderation_status',
                    models.CharField(
                        choices=[
                            ('sent', 'Отправлено модератору'),
                            ('handling', 'В обработке'),
                            ('added', 'Добавлено'),
                            ('rejected', 'Отклонено'),
                        ],
                        default='sent',
                        max_length=8,
                        verbose_name='статус модерации',
                    ),
                ),
                (
                    'is_on_home_page',
                    models.BooleanField(
                        default=False,
                        help_text='Поставьте галочку, чтобы отобразить на главной странице',
                        verbose_name='отображать на главной странице',
                    ),
                ),
                (
                    'date_created',
                    models.DateTimeField(
                        auto_now_add=True, verbose_name='дата создания'
                    ),
                ),
                (
                    'date_updated',
                    models.DateTimeField(
                        auto_now=True, verbose_name='дата последнего изменения'
                    ),
                ),
            ],
            options={
                'verbose_name': 'блюдо',
                'verbose_name_plural': 'блюда',
                'ordering': ['-date_created'],
            },
        ),
        migrations.CreateModel(
            name='DishType',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'name',
                    models.CharField(
                        help_text='Укажите название. Максимум 100 символов',
                        max_length=100,
                        verbose_name='название',
                    ),
                ),
            ],
            options={
                'verbose_name': 'тип блюда',
                'verbose_name_plural': 'типы блюд',
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'name',
                    models.CharField(
                        help_text='Укажите название. Максимум 100 символов',
                        max_length=100,
                        verbose_name='название',
                    ),
                ),
            ],
            options={
                'verbose_name': 'ингредиент',
                'verbose_name_plural': 'ингредиенты',
            },
        ),
        migrations.CreateModel(
            name='IngredientInstance',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'quantity',
                    models.PositiveIntegerField(
                        default=None,
                        help_text='Укажите объём ингредиента',
                        verbose_name='объём ингредиента',
                    ),
                ),
                (
                    'quantity_type',
                    models.CharField(
                        choices=[
                            ('kg', 'килограмм'),
                            ('gram', 'грамм'),
                            ('liters', 'литр'),
                            ('milliliters', 'миллилитр'),
                            ('table spoon', 'столовая ложка'),
                            ('tea spoon', 'чайная ложка'),
                        ],
                        help_text='Укажите тип объёма ингредиента. Максимум 100 символов',
                        max_length=11,
                        verbose_name='тип объёма',
                    ),
                ),
                (
                    'dish',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='ingredients',
                        to='dishes.dish',
                    ),
                ),
                (
                    'ingredient',
                    models.ForeignKey(
                        help_text='Укажите название ингредиента. Максимум 100 символов',
                        on_delete=django.db.models.deletion.CASCADE,
                        to='dishes.ingredient',
                        verbose_name='название ингредиента',
                    ),
                ),
            ],
            options={
                'verbose_name': 'объект ингредиента',
                'verbose_name_plural': 'объекты ингредиентов',
            },
        ),
    ]
